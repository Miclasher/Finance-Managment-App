@page "/login"
@rendermode InteractiveServer
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>
@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p class="text-danger">@ErrorMessage</p>
}

<div class="container">
    <input @bind="UserLoginDTO.Username" class="form-control m-3" placeholder="Username" />
    <input @bind="UserLoginDTO.Password" type="password" class="form-control m-3" placeholder="Password" />
    <button class="btn btn-primary m-3" @onclick="LoginUserAsync">Login</button>
</div>

@code {
    string? ErrorMessage { get; set; }
    UserLoginDTO UserLoginDTO { get; set; } = new UserLoginDTO() { Username = string.Empty, Password = string.Empty };

    private async Task LoginUserAsync()
    {
        var success = await AuthService.LoginAsync(UserLoginDTO);
        if (success)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ErrorMessage = "Failed to login.";
            StateHasChanged();
        }
    }
}
